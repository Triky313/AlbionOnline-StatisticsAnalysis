<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:notification="clr-namespace:StatisticsAnalysisTool.Network.Notification"
                    xmlns:com="clr-namespace:StatisticsAnalysisTool.Common"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:networkModel="clr-namespace:StatisticsAnalysisTool.Models.NetworkModel"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/"
                    xmlns:models="clr-namespace:StatisticsAnalysisTool.Models"
                    xmlns:enumerations="clr-namespace:StatisticsAnalysisTool.Enumerations"
                    xmlns:converters="clr-namespace:StatisticsAnalysisTool.Common.Converters"
                    mc:Ignorable="d">

    <converters:ValuePerHourConverter x:Key="ValuePerHourConverter" />

    <Style x:Key="LineFragmentImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="OperatorTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
        <Setter Property="Text" Value="+ " />
        <Style.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Static enumerations:AttributeStatOperator.Minus}">
                <Setter Property="Text" Value="- " />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Chest icons -->
    <Style TargetType="Image" x:Key="Icon.Chest.Standard.Close" >
        <Setter Property="Source" Value="../Resources/chest_close_standard.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Standard.Open" >
        <Setter Property="Source" Value="../Resources/chest_open_standard.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Uncommon.Close" >
        <Setter Property="Source" Value="../Resources/chest_close_uncommon.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Uncommon.Open" >
        <Setter Property="Source" Value="../Resources/chest_open_uncommon.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Rare.Close" >
        <Setter Property="Source" Value="../Resources/chest_close_rare.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Rare.Open" >
        <Setter Property="Source" Value="../Resources/chest_open_rare.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Legendary.Close" >
        <Setter Property="Source" Value="../Resources/chest_close_legendary.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Legendary.Open" >
        <Setter Property="Source" Value="../Resources/chest_open_legendary.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Dungeon" >
        <Setter Property="Source" Value="../Resources/dungeon.png"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Fame" >
        <Setter Property="Source" Value="../Resources/fame.png"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Silver" >
        <Setter Property="Source" Value="../Resources/silver.png"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.ReSpec" >
        <Setter Property="Source" Value="../Resources/respec.png"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>

    <Style x:Key="Tracking.Information.Border" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="7"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource SolidColorBrush.Background.2}"/>
    </Style>

    <Style x:Key="Tracking.Information.StackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="5 0 5 0"/>
    </Style>

    <Style x:Key="Tracking.Information.Title" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Padding" Value="0 3 0 0"/>
    </Style>

    <Style x:Key="Tracker.Fraction.Coin.Icon" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Unknown}">
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Martlock}">
                <Setter Property="Source" Value="../Resources/factioncoin_martlock.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Lymhurst}">
                <Setter Property="Source" Value="../Resources/factioncoin_lymhurst.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Bridgewatch}">
                <Setter Property="Source" Value="../Resources/factioncoin_bridgewatch.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.FortSterling}">
                <Setter Property="Source" Value="../Resources/factioncoin_fortsterling.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Thetford}">
                <Setter Property="Source" Value="../Resources/factioncoin_thetford.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Caerleon}">
                <Setter Property="Source" Value="../Resources/factioncoin_caerleon.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Tracker.Fraction.Flag.Icon" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Unknown}">
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Martlock}">
                <Setter Property="Source" Value="../Resources/factionflag_martlock.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Lymhurst}">
                <Setter Property="Source" Value="../Resources/factionflag_lymhurst.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Bridgewatch}">
                <Setter Property="Source" Value="../Resources/factionflag_bridgewatch.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.FortSterling}">
                <Setter Property="Source" Value="../Resources/factionflag_fortsterling.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Thetford}">
                <Setter Property="Source" Value="../Resources/factionflag_thetford.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Caerleon}">
                <Setter Property="Source" Value="../Resources/factionflag_caerleon.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Tracker.Icon.SeasonPoints" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Source" Value="../Resources/icon_daily_season_points.png"/>
    </Style>

    <DataTemplate x:Key="NotificationTemplate" DataType="{x:Type notification:TrackingNotification}">
        <Grid Visibility="{Binding Visibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Margin="3" Text="{Binding DateTime, StringFormat=[hh:mm:ss]}" Foreground="{StaticResource SolidColorBrush.Text.1}" />
            <ContentControl Grid.Column="1" Margin="3" Content="{Binding Fragment}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:TextFragment}">
        <TextBlock Text="{Binding Text, StringFormat='{}{0} '}" TextWrapping="Wrap" Foreground="{StaticResource SolidColorBrush.Text.1}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:FameNotificationFragment}">
        <VirtualizingStackPanel VirtualizationMode="Recycling" Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Source="../Resources/fame.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding TotalGainedFame, StringFormat='{} {0:N0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding FameText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding PvpPveType}" Value="{x:Static enumerations:PvpPveType.Pve}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PvpPveType}" Value="{x:Static enumerations:PvpPveType.Pvp}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pvp}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="(" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <Image Source="../Resources/zone.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding Zone, StringFormat='{} {0:N0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <Image Source="../Resources/crown.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding Premium, StringFormat='{}{0:N0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}" />

            <Image Source="../Resources/satchel.png" Style="{StaticResource LineFragmentImageStyle}" />
            
            <TextBlock Text="{Binding Satchel, StringFormat='{}{0:N0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}" />

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding BonusFactorInPercent, StringFormat='{} +{0:N2}%'}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBonusFactorActive}" Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsBonusFactorActive}" Value="false">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <TextBlock Text="{Binding EndText, StringFormat='{}) {0}'}" Foreground="{StaticResource SolidColorBrush.Text.1}" />
        </VirtualizingStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:SilverNotificationFragment}">
        <VirtualizingStackPanel VirtualizationMode="Recycling" Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Source="../Resources/silver.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding TotalGainedSilver, StringFormat='{} {0:N2} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding SilverText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="(" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <Image Source="../Resources/zone.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding ClusterBonus, StringFormat='{}{0:N2} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <Image Source="../Resources/crown.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding PremiumBonus, StringFormat='{}{0:N2}  '}" Foreground="{StaticResource SolidColorBrush.Text.1}" />

            <TextBlock Text="-" Foreground="{StaticResource SolidColorBrush.Text.1}" />
            <Image Source="../Resources/shields.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding ClusterTax, StringFormat='{}{0:N2}) '}" Foreground="{StaticResource SolidColorBrush.Text.1}" />


            <TextBlock Text="{Binding EndText, StringFormat='{}{0}'}" Foreground="{StaticResource SolidColorBrush.Text.1}" />
        </VirtualizingStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:FactionPointsNotificationFragment}">
        <VirtualizingStackPanel VirtualizationMode="Recycling" Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Style="{StaticResource Tracker.Fraction.Coin.Icon}"/>
            <TextBlock Text="{Binding GainedFractionPoints, StringFormat='{} {0:N0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding ValueText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{Binding EndText, StringFormat='{}{0}'}" Foreground="{StaticResource SolidColorBrush.Text.1}" />
        </VirtualizingStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:FactionFlagPointsNotificationFragment}">
        <VirtualizingStackPanel VirtualizationMode="Recycling" Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Style="{StaticResource Tracker.Fraction.Flag.Icon}"/>
            <TextBlock Text="{Binding GainedFractionPoints, StringFormat='{} {0:N2} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding ValueText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{Binding EndText, StringFormat='{}{0}'}" Foreground="{StaticResource SolidColorBrush.Text.1}" />
        </VirtualizingStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:SeasonPointsNotificationFragment}">
        <VirtualizingStackPanel VirtualizationMode="Recycling" Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Style="{StaticResource Tracker.Icon.SeasonPoints}"/>
            <TextBlock Text="{Binding GainedSeasonPoints, StringFormat='{} {0:N0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding ValueText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{Binding EndText, StringFormat='{}{0}'}" Foreground="{StaticResource SolidColorBrush.Text.1}" />
        </VirtualizingStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:CombatNotificationFragment}">
        <VirtualizingStackPanel VirtualizationMode="Recycling" Orientation="Horizontal">
            <TextBlock Text="{Binding CauserName, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <TextBlock Text="{Binding Damage, IsAsync=True, StringFormat='{}{0:N0} '}" Foreground="{StaticResource SolidColorBrush.Accent.Blue.2}"/>
            <TextBlock Text="{Binding TargetName, IsAsync=True, StringFormat='{}{0}'}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
        </VirtualizingStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:OtherGrabbedLootNotificationFragment}">
        <VirtualizingStackPanel VirtualizationMode="Recycling" Orientation="Horizontal">
            <TextBlock Text="{Binding LootedByName, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Accent.Blue.3}"/>
            <TextBlock Text="{Binding LootedByGuild, IsAsync=True, StringFormat='{}({0}) '}" Foreground="{StaticResource SolidColorBrush.Accent.Blue.3}"
                       ToolTip="{Binding TranslationGuild}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLootedByGuildEmpty}" Value="false">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLootedByGuildEmpty}" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{Binding LootedTranslation, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <TextBlock Text="{Binding Quantity, IsAsync=True, StringFormat='{}{0}x '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <Image Source="{Binding Icon, IsAsync=True}" Width="25" Height="25" Stretch="Fill" />
            <TextBlock Text="{Binding LocalizedName, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>

            <TextBlock Text="{Binding FromTranslation, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <TextBlock Text="{Binding LootedFromName, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Accent.Red.3}"/>
            <TextBlock Text="{Binding LootedFromGuild, IsAsync=True, StringFormat='{}({0}) '}" Foreground="{StaticResource SolidColorBrush.Accent.Red.3}"
                       ToolTip="{Binding TranslationGuild}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLootedFromGuildEmpty}" Value="false">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLootedFromGuildEmpty}" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </VirtualizingStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:KillNotificationFragment}">
        <StackPanel Orientation="Horizontal" Height="24">
            <TextBlock Text="{Binding Died, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Accent.Red.3}"/>
            <TextBlock Text="{Binding ValueText, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Text.1}"/>
            <TextBlock Text="{Binding KilledBy, IsAsync=True, StringFormat='{}{0}'}" Foreground="{StaticResource SolidColorBrush.Accent.Blue.3}"/>
            <TextBlock Text="{Binding KilledByGuild, IsAsync=True, StringFormat='{} ({0})'}" Foreground="{StaticResource SolidColorBrush.Accent.Blue.3}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsKilledByGuildEmpty}" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Image Source="../Resources/skull.png" Margin="0,-5,0,0" Height="24" Width="24" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type models:MainStatObject}">
        <StackPanel Orientation="Vertical" Margin="10,0,10,0" Visibility="{Binding Visibility}">
            <Image Style="{StaticResource Tracker.Fraction.Coin.Icon}" ToolTip="{Binding TranslationTotalFactionPoints, FallbackValue='TOTAL__FACTION__POINTS'}" />
            <TextBlock Text="{Binding Value, StringFormat='{}{0:N0}', FallbackValue=0}" FontSize="16" Foreground="{StaticResource SolidColorBrush.Text.1}" HorizontalAlignment="Center" />
            <TextBlock FontSize="16" Text="{Binding ValuePerHour, Converter={StaticResource ValuePerHourConverter}, FallbackValue=0 /h}"
                           Foreground="{StaticResource SolidColorBrush.Text.1}" HorizontalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="BarButton" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Style TargetType="TextBlock" x:Key="ButtonLabel">
                <Setter Property="Text" Value="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type Button}} }" />
            </Style>
        </ControlTemplate.Resources>
        <Grid>
            <!-- Other controls here -->
            <TextBlock Name="LabelText" Style="{StaticResource ButtonLabel}" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="fa5:ImageAwesome" x:Key="Style.Party.Circle">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.2}" />
        <Setter Property="Icon" Value="Solid_UserCircle" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="sword">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Sword}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="spear">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Spear}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="quarterstaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Quarterstaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="naturestaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.NatureStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="mace">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Mace}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="holystaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.HolyStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="hammer">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Hammer}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="froststaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.FrostStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="firestaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.FireStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="dagger">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Dagger}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="cursestaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.CursedStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="crossbow">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Crossbow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="bow">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Bow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="axe">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.Axe}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="arcanestaff">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Weapon.ArcaneStaff}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Name}" Value="Rakaaria">
                <Setter Property="Margin" Value="0,0,0,1" />
                <Setter Property="ToolTip" Value="Rakaaria - Much love for the best girl in the world!" />
                <Setter Property="Icon" Value="Solid_Heart" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="{StaticResource Color.Accent.Red.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Color.Accent.Red.2}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.5" Color="{StaticResource Color.Accent.Red.3}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Name}" Value="Triky313">
                <Setter Property="Margin" Value="0,0,0,1" />
                <Setter Property="Icon" Value="Solid_Font" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.5" Color="{StaticResource Color.Accent.Red.3}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Name}" Value="Rhaegaryn">
                <Setter Property="Margin" Value="0,0,0,1" />
                <Setter Property="ToolTip" Value="Rhaegaryn - Most dedicated contributor!" />
                <Setter Property="Icon" Value="Solid_Star" />
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Yellow.1}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.5" Color="{StaticResource Color.Accent.Yellow.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate DataType="{x:Type networkModel:PartyMemberCircle}">
        <Grid Height="14" Width="14" Margin="2,4,2,0" VerticalAlignment="Top" ToolTip="{Binding Name}">
            <fa5:ImageAwesome Style="{StaticResource Style.Party.Circle}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="LoggingFilterObject" DataType="{x:Type models:LoggingFilterObject}">
        <StackPanel Orientation="Horizontal">
            <CheckBox IsChecked="{Binding IsSelected}" Width="20" VerticalAlignment="Top" />
            <TextBlock Text="{Binding Name}" Width="100" TextWrapping="Wrap" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MapMarkerIconTemplate" DataType="{x:Type enumerations:MapMarkerType}">
        <Image Height="36" Width="36">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Source" Value="../Assets/empty_icon.png" />
                    <Setter Property="Margin" Value="0,-10,0,0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.DungeonElite}">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/raid_dungeon.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.DungeonGroup}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/group_dungeon.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.DungeonSolo}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/solo_dungeon.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.RoadsOfAvalonRaidPve}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/road_chest_raid.png" />
                            <Setter Property="Margin" Value="0,-18,0,0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.RoadsOfAvalonGroupPve}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/road_chest_group.png" />
                            <Setter Property="Margin" Value="0,-18,0,0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.RoadsOfAvalonSoloPve}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/road_chest_solo.png" />
                            <Setter Property="Margin" Value="0,-18,0,0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.Stone}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/minimapmarker_stone.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.Fiber}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/minimapmarker_fiber.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.Wood}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/minimapmarker_wood.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.Hide}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/minimapmarker_hide.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAsync=True}" Value="{x:Static enumerations:MapMarkerType.Ore}">
                            <Setter Property="Source" Value="../Assets/MiniMapMarker/minimapmarker_ore.png" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
    </DataTemplate>

    <!-- ClusterInfo -->
    <DataTemplate x:Key="ClusterInfoTemplate" DataType="{x:Type models:ClusterInfo}">
        <Grid Margin="0,0,0,1">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ClusterMode}" Value="{x:Static enumerations:ClusterMode.SafeArea}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                        <GradientStop Color="{StaticResource Cluster.SafeArea}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ClusterMode}" Value="{x:Static enumerations:ClusterMode.Island}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                        <GradientStop Color="{StaticResource Cluster.Island}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ClusterMode}" Value="{x:Static enumerations:ClusterMode.Yellow}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                        <GradientStop Color="{StaticResource Cluster.Yellow}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ClusterMode}" Value="{x:Static enumerations:ClusterMode.Red}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                        <GradientStop Color="{StaticResource Cluster.Red}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ClusterMode}" Value="{x:Static enumerations:ClusterMode.Black}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                        <GradientStop Color="{StaticResource Cluster.Black}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ClusterMode}" Value="{x:Static enumerations:ClusterMode.AvalonTunnel}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                        <GradientStop Color="{StaticResource Cluster.Avalon}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ClusterMode}" Value="{x:Static enumerations:ClusterMode.Mists}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                        <GradientStop Color="{StaticResource Cluster.Mists}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ClusterMode}" Value="{x:Static enumerations:ClusterMode.Unknown}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                        <GradientStop Color="{StaticResource Cluster.Black}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal">
                    <Label MinWidth="125" VerticalAlignment="Center" FontSize="12" Margin="0 0 5 0" Foreground="{StaticResource SolidColorBrush.Text.1}">
                        <Label.Content>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                        <Binding Path="Entered" FallbackValue="00.00.0000 00:00:00" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Label.Content>
                    </Label>
                    <Label Content="{Binding TierString}" FontSize="12" Foreground="{StaticResource SolidColorBrush.Text.1}" 
                               MinWidth="30" MaxWidth="30" Margin="5,0, 0, 0" />
                    <Label Content="{Binding  ClusterHistoryString1}" FontSize="12" Foreground="{StaticResource SolidColorBrush.Text.1}" 
                               MinWidth="150" MaxWidth="200" Margin="5,0, 0, 0" />
                    <Label Content="{Binding  ClusterHistoryString2}" FontSize="12" Foreground="{StaticResource SolidColorBrush.Text.1}" 
                               MinWidth="150" MaxWidth="200" Margin="5,0, 0, 0" />
                    <Label Content="{Binding  ClusterHistoryString3}" FontSize="12" Foreground="{StaticResource SolidColorBrush.Text.1}" 
                               MinWidth="150" MaxWidth="200" Margin="5,0, 0, 0" />
                    <TextBox Text="" MinWidth="150" MaxWidth="150" Background="{StaticResource SolidColorBrush.Value.Silver.Transparent}" BorderThickness="0" />
                </StackPanel>
                <ItemsControl ItemsSource="{Binding MapMarkers, IsAsync=True}" ItemTemplate="{StaticResource MapMarkerIconTemplate}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <Style TargetType="ItemsControl" x:Key="PartyMember.ItemsControl">
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Loot logger styles -->
    <DataTemplate x:Key="TopLooterObjectTemplate" DataType="{x:Type models:TopLooterObject}">
        <StackPanel Orientation="Horizontal" Margin="5,-5,5,0" Height="20">
            <Label Content="{Binding PlayerName}" ContentStringFormat="{}{0:N0}" Padding="0,5,0,0"/>
            <Label Content="{Binding LootActions}" ContentStringFormat="{}({0:N0})" Padding="0,5,0,0"/>
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>