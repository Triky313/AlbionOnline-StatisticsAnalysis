<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:StatisticsAnalysisTool.Common"
                    xmlns:enum="clr-namespace:StatisticsAnalysisTool.Enumerations"
                    xmlns:itemWindowModel="clr-namespace:StatisticsAnalysisTool.Models.ItemWindowModel"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/"
                    xmlns:com="clr-namespace:StatisticsAnalysisTool.Common"
                    xmlns:models="clr-namespace:StatisticsAnalysisTool.Models">

    <Style x:Key="ListView.Grid.Item.Price" TargetType="Grid">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <Style x:Key="ListView.Grid.Item.Date" TargetType="Grid">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
    </Style>

    <Style TargetType="StackPanel" x:Key="ListView.Grid.StackPanel.Item.Price">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="22,0,0,0"/>
    </Style>

    <Style TargetType="Image" x:Key="ListView.Grid.StackPanel.Image.Price.Silver" >
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Source" Value="../Resources/silver.png"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="InfoDescription.TextBlock" >
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="auto"/>
    </Style>

    <Style x:Key="ItemWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Height" Value="420" />
        <Setter Property="Width" Value="1210" />
        <Setter Property="MinHeight" Value="350" />
        <Setter Property="MinWidth" Value="900" />
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidColorBrush.Background.1}"/>
        <Setter Property="Background" Value="{StaticResource SolidColorBrush.Background.1}"/>
    </Style>

    <Style x:Key="ItemWindow.BorderColor.ItemLevel.Style" TargetType="Border">
        <Setter Property="BorderThickness" Value="0,2,0,0" />
        <Setter Property="Margin" Value="1,1,0,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Level, IsAsync=True}" Value="0">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="{StaticResource Item.Level.Color.0}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level, IsAsync=True}" Value="1">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="{StaticResource Item.Level.Color.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level, IsAsync=True}" Value="2">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="{StaticResource Item.Level.Color.2}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level, IsAsync=True}" Value="3">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="{StaticResource Item.Level.Color.3}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level, IsAsync=True}" Value="4">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="{StaticResource Item.Level.Color.4}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListView.City.Color.Style" TargetType="Label">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="150" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.CaerleonMarket}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.Caerleon}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.ThetfordMarket}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.Thetford}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.MartlockMarket}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.Martlock}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.FortSterlingMarket}">
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.FortSterling}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.BridgewatchMarket}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.Bridgewatch}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.LymhurstMarket}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.Lymhurst}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.BrecilienMarket}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.Brecilien}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.ArthursRest}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.ArthursRest}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.MorganasRest}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.MorganasRest}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.MerlynsRest}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.MerlynsRest}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MarketLocation}" Value="{x:Static common:MarketLocation.BlackMarket}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{StaticResource Color.Background.1}" Offset="1"/>
                            <GradientStop Color="{StaticResource Color.City.BlackMarket}"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBox.Crafting" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
        <Setter Property="Background" Value="{StaticResource SolidColorBrush.Background.5}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidColorBrush.Text.7}" />
        <Setter Property="MaxLength" Value="10" />
        <Setter Property="Height" Value="20" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="MaxWidth" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="Label.Crafting" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="Label.Crafting.Title" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Blue.3}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <DataTemplate x:Key="RequiredResourceTemplate" DataType="{x:Type itemWindowModel:RequiredResource}">
        <StackPanel Orientation="Horizontal" Margin="5,0,5,5">
            <Image Source="{Binding Icon}" HorizontalAlignment="Left" Height="50" Width="50" Margin="0,0,0,0" VerticalAlignment="Top" />
            <StackPanel Orientation="Vertical">
               <StackPanel Orientation="Horizontal">
                   <Label Content="{Binding CraftingResourceName, FallbackValue=CRAFTING__RESOURCE__FIRST__NAME}" Style="{StaticResource Label.Crafting.Title}" />
                   <Grid Margin="2" Width="12" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left">
                       <fa5:ImageAwesome Icon="Solid_Copy" Foreground="{StaticResource SolidColorBrush.Text.1}">
                           <fa5:ImageAwesome.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding CopyItemNameToClipboardCommand}" CommandParameter="{Binding CraftingResourceName}" />
                           </fa5:ImageAwesome.InputBindings>
                       </fa5:ImageAwesome>
                   </Grid>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical">
                        <Label Content="{Binding TranslationCost, FallbackValue=COST__A}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        <Label Content="{Binding TranslationGetPrice, FallbackValue=GET__PRICE}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        <Label Content="{Binding TranslationOneProductionAmount, FallbackValue=ONE__PRODUCTION__AMOUNT}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        <Label Content="{Binding TranslationTotalQuantity, FallbackValue=TOTAL__QUANTITY}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        <Label Content="{Binding TranslationTotalCost, FallbackValue=TOTAL__COST}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    </StackPanel>
                    <StackPanel Orientation="Vertical">
                        <TextBox Text="{Binding ResourceCost}" Style="{StaticResource TextBox.Crafting}" common:TextBoxHelper.OnlyNumeric="Int" />
                        <ComboBox VerticalAlignment="Center" Margin="0,1,0,0" MinWidth="96" Width="96" Height="18" ItemsSource="{Binding ItemPricesLocations}" 
                                  SelectedValue="{Binding ItemPricesLocationSelected}" SelectedValuePath="Key" DisplayMemberPath="Value">
                        </ComboBox>
                        <Label Content="{Binding OneProductionAmount}" Style="{StaticResource Label.Crafting}" />
                        <Label Content="{Binding TotalQuantity}" ContentStringFormat="{}{0:N0}" Style="{StaticResource Label.Crafting}" />
                        <Label Content="{Binding TotalCost}" ContentStringFormat="{}{0:N0}" Style="{StaticResource Label.Crafting}" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EssentialCraftingValuesTemplate" DataType="{x:Type itemWindowModel:EssentialCraftingValuesTemplate}">
        <StackPanel Orientation="Vertical" Margin="10">
            <StackPanel Orientation="Vertical" Margin="0,0,0,5">
                <Label Content="{Binding TranslationItemQuantity, FallbackValue=ITEM__QUANTITY}" Style="{StaticResource Label.Crafting}" />
                <StackPanel Orientation="Horizontal">
                    <TextBox Text="{Binding CraftingItemQuantity}" Style="{StaticResource TextBox.Crafting}" MaxLength="9" Margin="0,-2,0,0" common:TextBoxHelper.OnlyNumeric="Int" />
                    <Label Content="{Binding AmountCrafted, FallbackValue=0}">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
                                <Setter Property="ContentStringFormat" Value="{}x{0:N0}" />
                                <Setter Property="Height" Value="20" />
                                <Setter Property="Margin" Value="2,0,5,0" />
                                <Setter Property="Padding" Value="2,0,2,0" />
                                <Setter Property="HorizontalAlignment" Value="Left" />

                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAmountCraftedRelevant, IsAsync=True}" Value="true">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsAmountCraftedRelevant, IsAsync=True}" Value="false">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="0,0,0,5">
                <Label Content="{Binding TranslationSellPricePerItem, FallbackValue=SELL__PRICE__PER__ITEM}" Style="{StaticResource Label.Crafting}" />
                <StackPanel Orientation="Horizontal">
                    <TextBox Text="{Binding SellPricePerItem}" Style="{StaticResource TextBox.Crafting}" Margin="0,0,0,0" common:TextBoxHelper.OnlyNumeric="Int" />
                    <ComboBox VerticalAlignment="Center" Margin="5,0,0,0" MinWidth="96" Width="96" Height="18" ItemsSource="{Binding ItemPricesLocations}" 
                              SelectedValue="{Binding ItemPricesLocationSelected}" SelectedValuePath="Key" DisplayMemberPath="Value">
                    </ComboBox>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="0,0,0,5">
                <Label Content="{Binding TranslationSetupFeePercent, FallbackValue=SETUP__FEE__%}" Style="{StaticResource Label.Crafting}" />
                <TextBox Text="{Binding SetupFee}" Style="{StaticResource TextBox.Crafting}" Margin="0,-2,0,0" common:TextBoxHelper.OnlyNumeric="Double" />
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="0,0,0,5">
                <Label Content="{Binding TranslationAuctionsHouseTaxPercent, FallbackValue=AUCTIONS__HOUSE__TAX__%}" Style="{StaticResource Label.Crafting}" />
                <TextBox Text="{Binding AuctionHouseTax}" Style="{StaticResource TextBox.Crafting}" Margin="0,-2,0,0" common:TextBoxHelper.OnlyNumeric="Double" />
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="0,0,0,5">
                <Label Content="{Binding TranslationUsageFeePerHundredFood, FallbackValue=USAGE__FEE__PER__HUNDRED__FOOD}" Style="{StaticResource Label.Crafting}" />
                <TextBox Text="{Binding UsageFeePerHundredFood}" Style="{StaticResource TextBox.Crafting}" Margin="0,-2,0,0" common:TextBoxHelper.OnlyNumeric="Int" />
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="0,0,0,5">
                <Label Content="{Binding TranslationCraftingBonusPercent, FallbackValue=CRAFTING__BONUS__%}" Style="{StaticResource Label.Crafting}" />
                <TextBox Text="{Binding CraftingBonus}" Style="{StaticResource TextBox.Crafting}" Margin="0,-2,0,0" common:TextBoxHelper.OnlyNumeric="Int" />
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="0,0,0,5">
                <Label Content="{Binding TranslationOtherCosts, FallbackValue=OTHER__COSTS}" Style="{StaticResource Label.Crafting}" />
                <TextBox Text="{Binding OtherCosts}" Style="{StaticResource TextBox.Crafting}" Margin="0,-2,0,0" common:TextBoxHelper.OnlyNumeric="Int" />
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="0,0,0,5">
                <Label Content="{Binding TranslationCraftingWithFocus, FallbackValue=CRAFTING__WITH__FOCUS}" Style="{StaticResource Label.Crafting}" />
                <CheckBox IsChecked="{Binding IsCraftingWithFocus}" Margin="0,-2,0,0" />
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="RequiredJournalTemplate" DataType="{x:Type itemWindowModel:RequiredJournal}">
        <StackPanel Margin="5">
            <StackPanel Orientation="Vertical" Margin="5,5,5,0">
                <Label Content="{Binding TranslationRequiredJournals, FallbackValue=REQUIRED__JOURNALS}" Style="{StaticResource Label.Crafting}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0,5,5">
                <Image Source="{Binding Icon}" HorizontalAlignment="Left" Height="50" Width="50" Margin="0,0,0,5" VerticalAlignment="Top" />
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                        <Label Content="{Binding CraftingResourceName, FallbackValue=CRAFTING__RESOURCE__NAME}" Style="{StaticResource Label.Crafting.Title}" />
                        <Grid Margin="2" Width="12" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <fa5:ImageAwesome Icon="Solid_Copy" Foreground="{StaticResource SolidColorBrush.Text.1}">
                                <fa5:ImageAwesome.InputBindings>
                                    <MouseBinding MouseAction="LeftClick" Command="{Binding CopyItemNameToClipboardCommand}" />
                                </fa5:ImageAwesome.InputBindings>
                            </fa5:ImageAwesome>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel Orientation="Vertical">
                            <Label Content="{Binding TranslationCostsPerJournal, FallbackValue=COSTS__PER__JOURNAL}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                            <Label Content="{Binding TranslationGetPrice, FallbackValue=GET__PRICE}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                            <Label Content="{Binding TranslationRequiredJournalAmount, FallbackValue=REQUIRED__JOURNAL__AMOUNT}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                            <Label Content="{Binding TranslationSellPricePerJournal, FallbackValue=SELL__PRICE__PER__JOURNAL}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                            <Label Content="{Binding TranslationGetPrice, FallbackValue=GET__PRICE}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        </StackPanel>
                        <StackPanel Orientation="Vertical">
                            <TextBox Text="{Binding CostsPerJournal}" Style="{StaticResource TextBox.Crafting}" common:TextBoxHelper.OnlyNumeric="Int" />
                            <ComboBox VerticalAlignment="Center" Margin="0,1,0,0" MinWidth="96" Width="96" Height="18" 
                                      ItemsSource="{Binding ItemPricesLocationsEmptyJournal}" SelectedValue="{Binding ItemPricesLocationEmptyJournalSelected}" 
                                      SelectedValuePath="Key" DisplayMemberPath="Value">
                            </ComboBox>
                            <Label Content="{Binding RequiredJournalAmount}" ContentStringFormat="{}{0:N2}" Style="{StaticResource Label.Crafting}" />
                            <TextBox Text="{Binding SellPricePerJournal}" Style="{StaticResource TextBox.Crafting}" common:TextBoxHelper.OnlyNumeric="Int" />
                            <ComboBox VerticalAlignment="Center" Margin="0,1,0,0" MinWidth="96" Width="96" Height="18" 
                                      ItemsSource="{Binding ItemPricesLocationsFullJournal}" SelectedValue="{Binding ItemPricesLocationFullJournalSelected}" 
                                      SelectedValuePath="Key" DisplayMemberPath="Value">
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="CraftingCalculationTemplate" DataType="{x:Type itemWindowModel:CraftingCalculation}">
        <StackPanel Margin="5">
            <StackPanel Orientation="Vertical" Margin="5,5,5,0">
                <Label Content="{Binding TranslationCalculation, FallbackValue=CALCULATION}" Style="{StaticResource Label.Crafting}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5,0,5,5">
                <StackPanel Orientation="Vertical">
                    <Label Content="{Binding TranslationPossibleCrafting, FallbackValue=POSSIBLE__CRAFTING}" Style="{StaticResource Label.Crafting.Title}" Margin="0,5,0,0" />
                    <Label Content="{Binding TranslationPossibleItemCrafting, FallbackValue=POSSIBLE__ITEM__CRAFTING}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />

                    <StackPanel Orientation="Horizontal">
                        <Label Content="{Binding TranslationWeight, FallbackValue=WEIGHT}" Style="{StaticResource Label.Crafting.Title}" Margin="0,5,0,0" />
                        <Grid Margin="2,9,0,0" Width="10" Height="10" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <fa5:ImageAwesome HorizontalAlignment="Left" Foreground="{StaticResource SolidColorBrush.Text.1}">
                                <fa5:ImageAwesome.Style>
                                    <Style TargetType="{x:Type fa5:ImageAwesome}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding WeightValuesVisibility, IsAsync=True}" Value="Visible">
                                                <Setter Property="Icon" Value="Solid_AngleDoubleUp"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding WeightValuesVisibility, IsAsync=True}" Value="Collapsed">
                                                <Setter Property="Icon" Value="Solid_AngleDoubleDown"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </fa5:ImageAwesome.Style>
                                <fa5:ImageAwesome.InputBindings>
                                    <MouseBinding MouseAction="LeftClick" Command="{Binding FoldUnfoldWeightValuesCommand}" />
                                </fa5:ImageAwesome.InputBindings>
                            </fa5:ImageAwesome>
                        </Grid>
                    </StackPanel>
                    <StackPanel Visibility="{Binding WeightValuesVisibility, FallbackValue=Collapsed}">
                        <Label Content="{Binding TranslationTotalResourcesWeight, FallbackValue=TOTAL__RESOURCES__WEIGHT}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        <Label Content="{Binding TranslationTotalJournalWeight, FallbackValue=TOTAL__REQUIRED__JOURNAL__WEIGHT}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        <Separator />
                        <Label Content="{Binding TranslationTotalUnfinishedCraftingWeight, FallbackValue=TOTAL__UNFINISHED__CRAFTING__WEIGHT}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        <Label Style="{StaticResource Label.Crafting.Title}" Margin="0,5,0,0" />
                        <Label Content="{Binding TranslationTotalCraftedItemWeight, FallbackValue=TOTAL_CRAFTED__ITEM__WEIGHT}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                        <Separator />
                        <Label Content="{Binding TranslationTotalFinishedCraftingWeight, FallbackValue=TOTAL__FINISHED__CRAFTING__WEIGHT}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    </StackPanel>

                    <Label Content="{Binding TranslationStatementOfCost, FallbackValue=STATEMENT__OF__COST}" Style="{StaticResource Label.Crafting.Title}" Margin="0,5,0,0" />
                    <Label Content="{Binding TranslationCraftingTax, FallbackValue=CRAFTING__TAX}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Label Content="{Binding TranslationSetupFee, FallbackValue=SETUP__FEE}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Label Content="{Binding TranslationAuctionsHouseTax, FallbackValue=AUCTIONS__HOUSE__TAX}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Label Content="{Binding TranslationTotalJournalCosts, FallbackValue=TOTAL__JOURNAL__COSTS}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Label Content="{Binding TranslationTotalResourceCosts, FallbackValue=TOTAL__RESOURCE__COSTS}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Label Content="{Binding TranslationOtherCosts, FallbackValue=OTHER__COSTS}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Separator />
                    <Label Content="{Binding TranslationTotalCosts, FallbackValue=TOTAL__COSTS}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Separator />
                    <Label Content="{Binding TranslationTotalItemSells, FallbackValue=TOTAL__ITEM__SELLS}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Label Content="{Binding TranslationTotalJournalSells, FallbackValue=TOTAL__JOURNAL__SELLS}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Separator />
                    <Label Content="{Binding TranslationTotalSells, FallbackValue=TOTAL__SELLS}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                    <Separator />
                    <Label Content="{Binding TranslationGrandTotal, FallbackValue=GRAND__TOTAL}" ContentStringFormat="{}{0}:" Style="{StaticResource Label.Crafting}" />
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Style="{StaticResource Label.Crafting.Title}" Margin="0,5,0,0" />
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{Binding PossibleItemCrafting}" ContentStringFormat="{}{0:N2}" Style="{StaticResource Label.Crafting}" 
                               HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Yellow.1}" />
                        <Label Content="{Binding AmountCrafted, FallbackValue=0}" HorizontalAlignment="Right">
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
                                    <Setter Property="ContentStringFormat" Value="{}(x{0})" />
                                    <Setter Property="Height" Value="20" />
                                    <Setter Property="Margin" Value="0,0,5,0" />
                                    <Setter Property="Padding" Value="2,0,2,0" />
                                    <Setter Property="HorizontalAlignment" Value="Left" />

                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAmountCraftedRelevant, IsAsync=True}" Value="true">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAmountCraftedRelevant, IsAsync=True}" Value="false">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </StackPanel>

                    <Label Style="{StaticResource Label.Crafting.Title}" Margin="0,5,0,0" />
                    <StackPanel Visibility="{Binding WeightValuesVisibility, FallbackValue=Collapsed}">
                        <Label Content="{Binding TotalResourcesWeight}" ContentStringFormat="{}{0:N2} kg" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" />
                        <Label Content="{Binding TotalRequiredJournalWeight}" ContentStringFormat="{}{0:N2} kg" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" />
                        <Separator />
                        <Label Content="{Binding TotalUnfinishedCraftingWeight}" ContentStringFormat="{}{0:N2} kg" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" />
                        <Label Style="{StaticResource Label.Crafting.Title}" Margin="0,5,0,0" />
                        <Label Content="{Binding TotalCraftedItemWeight}" ContentStringFormat="{}{0:N2} kg" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" />
                        <Separator />
                        <Label Content="{Binding TotalFinishedCraftingWeight}" ContentStringFormat="{}{0:N2} kg" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" />
                    </StackPanel>

                    <Label Style="{StaticResource Label.Crafting.Title}" Margin="0,5,0,0" />
                    <Label Content="{Binding CraftingTax}" ContentStringFormat="{}- {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Red.2}" />
                    <Label Content="{Binding SetupFee}" ContentStringFormat="{}- {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Red.2}" />
                    <Label Content="{Binding AuctionsHouseTax}" ContentStringFormat="{}- {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Red.2}" />
                    <Label Content="{Binding TotalJournalCosts}" ContentStringFormat="{}- {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Red.2}" />
                    <Label Content="{Binding TotalResourceCosts}" ContentStringFormat="{}- {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Red.2}" />
                    <Label Content="{Binding OtherCosts}" ContentStringFormat="{}- {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Red.2}" />
                    <Separator />
                    <Label Content="{Binding TotalCosts}" ContentStringFormat="{}- {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Red.2}" />
                    <Separator />
                    <Label Content="{Binding TotalItemSells}" ContentStringFormat="{}+ {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Green.2}" />
                    <Label Content="{Binding TotalJournalSells}" ContentStringFormat="{}+ {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Green.2}" />
                    <Separator />
                    <Label Content="{Binding TotalSells}" ContentStringFormat="{}+ {0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" Foreground="{StaticResource SolidColorBrush.Accent.Green.2}" />
                    <Separator />
                    <Label Content="{Binding GrandTotal}" ContentStringFormat="{}{0:N0}" Style="{StaticResource Label.Crafting}" HorizontalAlignment="Right" FontWeight="Bold" />
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <Style TargetType="Label" x:Key="ItemWindow.Information.FullInfoValue">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style TargetType="StackPanel" x:Key="ListView.Grid.StackPanel.Item.Icon">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Grid view column templates -->
    <DataTemplate x:Key="GridViewColumnCityTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Label Content="{Binding LocationName}" Style="{StaticResource ListView.City.Color.Style}" Visibility="{Binding Visibility}">
            <Label.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" CommandParameter="{Binding LocationName}" />
            </Label.InputBindings>
        </Label>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumnSellPriceMinTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label>
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="SellPriceMin" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMin, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBestSellMinPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsBestSellMinPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumnSellPriceMinDateTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Date}" Visibility="{Binding Visibility}">
            <Label Content="{Binding SellPriceMinDateLastUpdateTime}" ToolTip="{Binding SellPriceMinDate, StringFormat='G'}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SellPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.NoValue}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SellPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldThird}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.6}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SellPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldSecond}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.5}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SellPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldFirst}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.4}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SellPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.Normal}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumnSellPriceMaxTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label>
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="SellPriceMax" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMax, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBestSellMaxPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsBestSellMaxPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumnSellPriceMaxDateTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Date}" Visibility="{Binding Visibility}">
            <Label Content="{Binding SellPriceMaxDateLastUpdateTime}" 
                   ToolTip="{Binding SellPriceMaxDate, StringFormat='G'}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SellPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.NoValue}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SellPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldThird}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.6}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SellPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldSecond}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.5}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SellPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldFirst}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.4}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SellPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.Normal}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumnBuyPriceMinTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label>
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="BuyPriceMin" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.BuyPriceMin, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBestBuyMinPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsBestBuyMinPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumnBuyPriceMinDateTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Date}" Visibility="{Binding Visibility}">
            <Label Content="{Binding BuyPriceMinDateLastUpdateTime}" 
                   ToolTip="{Binding BuyPriceMinDate, StringFormat='G'}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding BuyPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.NoValue}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BuyPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldThird}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.6}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BuyPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldSecond}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.5}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BuyPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldFirst}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.4}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BuyPriceMinDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.Normal}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumnBuyPriceMaxTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label>
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="BuyPriceMax" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.BuyPriceMax, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBestBuyMaxPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsBestBuyMaxPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumnBuyPriceMaxDateTemplate"  DataType="{x:Type models:ItemPricesObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Date}" Visibility="{Binding Visibility}">
            <Label Content="{Binding BuyPriceMaxDateLastUpdateTime}" 
                   ToolTip="{Binding BuyPriceMaxDate, StringFormat='G'}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding BuyPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.NoValue}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.7}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BuyPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldThird}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.6}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BuyPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldSecond}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.5}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BuyPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.ToOldFirst}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.4}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BuyPriceMaxDateStatus, IsAsync=True}" Value="{x:Static enum:ValueTimeStatus.Normal}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </Grid>
    </DataTemplate>

    <!-- MarketQualityObject -->
    <DataTemplate x:Key="GridViewColumn.CityForMarketQualityObjectTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Label Content="{Binding LocationName}" Style="{StaticResource ListView.City.Color.Style}" Visibility="{Binding Visibility}">
            <Label.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" CommandParameter="{Binding LocationName}" />
            </Label.InputBindings>
        </Label>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinNormalTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label ToolTip="{Binding SellPriceMinNormalDate, StringFormat='G'}">
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="SellPriceMinNormal" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinNormal, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinNormalBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinNormalBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinGoodTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label ToolTip="{Binding SellPriceMinGoodDate}">
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="SellPriceMinGood" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinGood, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinGoodBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinGoodBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinOutstandingTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label ToolTip="{Binding SellPriceMinOutstandingDate}">
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="SellPriceMinOutstanding" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinOutstanding, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinOutstandingBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinOutstandingBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinExcellentTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label ToolTip="{Binding SellPriceMinExcellentDate}">
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="SellPriceMinExcellent" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinExcellent, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinExcellentBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinExcellentBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinMasterpieceTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label ToolTip="{Binding SellPriceMinMasterpieceDate}">
                    <Label.Content>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="N0" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                    <Binding Path="SellPriceMinMasterpiece" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Label.Content>
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinMasterpiece, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinMasterpieceBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinMasterpieceBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- MarketQualityObject (real money) -->
    <DataTemplate x:Key="GridViewColumn.SellPriceMinNormalRmTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label Content="{Binding SellPriceMinNormalRealMoney}" 
                       ToolTip="{Binding SellPriceMinNormalDate}">
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinNormal, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinNormalBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinNormalBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinGoodRmTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label Content="{Binding SellPriceMinGoodRealMoney}" 
                       ToolTip="{Binding SellPriceMinGoodDate}">
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinGood, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinGoodBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinGoodBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinOutstandingRmTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label Content="{Binding SellPriceMinOutstandingRealMoney}" 
                       ToolTip="{Binding SellPriceMinOutstandingDate}">
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinOutstanding, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinOutstandingBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinOutstandingBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinExcellentRmTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label Content="{Binding SellPriceMinExcellentRealMoney}" 
                       ToolTip="{Binding SellPriceMinExcellentDate}">
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinExcellent, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinExcellentBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinExcellentBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewColumn.SellPriceMinMasterpieceRmTemplate"  DataType="{x:Type models:MarketQualityObject}">
        <Grid Style="{StaticResource ListView.Grid.Item.Price}" Visibility="{Binding Visibility}">
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Price}">
                <Label Content="{Binding SellPriceMinMasterpieceRealMoney}" 
                       ToolTip="{Binding SellPriceMinMasterpieceDate}">
                    <Label.InputBindings>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CopyTextToClipboard}" 
                                      CommandParameter="{Binding Content.SellPriceMinMasterpiece, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSellPriceMinMasterpieceBestPrice}" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Accent.Green.4}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSellPriceMinMasterpieceBestPrice}" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.1}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="80"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <StackPanel Style="{StaticResource ListView.Grid.StackPanel.Item.Icon}">
                <Image Style="{StaticResource ListView.Grid.StackPanel.Image.Price.Silver}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="LocationFilterObjectTemplate" DataType="{x:Type models:MainTabLocationFilterObject}">
        <StackPanel Orientation="Horizontal">
            <CheckBox IsChecked="{Binding IsChecked}" Width="20" VerticalAlignment="Top" />
            <TextBlock Text="{Binding Name}" Width="100" TextWrapping="Wrap" />
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>